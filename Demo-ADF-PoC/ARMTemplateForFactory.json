{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Demo-ADF-PoC"
		},
		"AzureBatch1_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch1'"
		},
		"AzureBatch2_accessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accessKey' of 'AzureBatch2'"
		},
		"AzureBlobStorageForADF_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageForADF'"
		},
		"AzureBlobStorageOnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorageOnPrem'"
		},
		"AzureFileStorage1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureFileStorage1'"
		},
		"AzureFileStorage2_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureFileStorage2'"
		},
		"FileServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FileServer1'"
		},
		"FtpServer1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'FtpServer1'"
		},
		"PostgreSqlOnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'PostgreSqlOnPrem'"
		},
		"SQlServeronPremAzure_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQlServeronPremAzure'"
		},
		"Sftp1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Sftp1'"
		},
		"SqlServerOnPrem_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerOnPrem'"
		},
		"SqlServerOnPrem1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServerOnPrem1'"
		},
		"AzureBatch1_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://itkbatch.ukwest.batch.azure.com"
		},
		"AzureBatch1_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "itkpool"
		},
		"AzureBatch1_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "itkbatch"
		},
		"AzureBatch2_properties_typeProperties_batchUri": {
			"type": "string",
			"defaultValue": "https://itkbatch.ukwest.batch.azure.com"
		},
		"AzureBatch2_properties_typeProperties_poolName": {
			"type": "string",
			"defaultValue": "itkpool"
		},
		"AzureBatch2_properties_typeProperties_accountName": {
			"type": "string",
			"defaultValue": "itkbatch"
		},
		"AzureFileStorage1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\1-Projects\\SCI\\Azure\\scripts"
		},
		"AzureFileStorage1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "aschalewat@yahoo.co.uk"
		},
		"AzureFileStorage2_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\1-Projects\\SCI\\Azure\\scripts"
		},
		"AzureFileStorage2_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "a.tessema@reply.com"
		},
		"FileServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "E:\\AzureTraining\\FileShare"
		},
		"FileServer1_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "aschalewat@yahoo.co.uk"
		},
		"FtpServer1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "localhost"
		},
		"FtpServer1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aschalew"
		},
		"RestService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://prime.savethechildren.net"
		},
		"Sftp1_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "192.168.1.119"
		},
		"Sftp1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "aschalew"
		},
		"asb-event-trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f7fa15ba-3af7-42f7-8108-ebc0c95ca037/resourceGroups/LearnADF/providers/Microsoft.EventGrid/topics/scieg"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f7fa15ba-3af7-42f7-8108-ebc0c95ca037/resourceGroups/LearnADF/providers/Microsoft.Storage/storageAccounts/adfstorageaccount123"
		},
		"trigger2_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f7fa15ba-3af7-42f7-8108-ebc0c95ca037/resourceGroups/LearnADF/providers/Microsoft.EventGrid/topics/scieg"
		},
		"triggerSQLtoBlob_properties_Sql2Blob_parameters_PLtableName": {
			"type": "string",
			"defaultValue": "Album"
		},
		"triggerSQLtoBlob_properties_Sql2Blob_parameters_PLserverName": {
			"type": "string",
			"defaultValue": "DESKTOP-3SA6C5T"
		},
		"triggerSQLtoBlob_properties_Sql2Blob_parameters_PLdbName": {
			"type": "string",
			"defaultValue": "mymusic"
		},
		"triggerSQLtoBlob_properties_Sql2Blob_parameters_PLuser": {
			"type": "string",
			"defaultValue": "aschalew"
		},
		"triggerSQLtoBlob_properties_Sql2Blob_parameters_PLpassword": {
			"type": "string",
			"defaultValue": "astes310569"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Access Token')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"additionalHeaders": {
									"Client ID": "client",
									"Client Secret": "secret",
									"username": "integration",
									"password": "SCI1234567!"
								},
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_AccessToken1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AccessToken",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PrimeREST"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AccessToken1')]",
				"[concat(variables('factoryId'), '/datasets/DS_AccessToken')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BatchService')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "test.bat",
							"resourceLinkedService": {
								"referenceName": "AzureBlobStorageForADF",
								"type": "LinkedServiceReference"
							},
							"folderPath": "scripts",
							"referenceObjects": {
								"linkedServices": [
									{
										"referenceName": "AzureBlobStorageForADF",
										"type": "LinkedServiceReference",
										"parameters": {}
									}
								],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BatchProcesses"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBatch2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Batchservice2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Custom1",
						"type": "Custom",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"command": "aribafiletransfer.bat ImportReceipts.bat",
							"resourceLinkedService": {
								"referenceName": "AzureBlobStorageForADF",
								"type": "LinkedServiceReference"
							},
							"folderPath": "aribascripts/bin",
							"referenceObjects": {
								"linkedServices": [
									{
										"referenceName": "AzureBlobStorageForADF",
										"type": "LinkedServiceReference",
										"parameters": {}
									}
								],
								"datasets": []
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureBatch2",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "BatchProcesses"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBatch2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob2Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy csv to json",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CSVBooks",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_JSONBooks",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy csv to json",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.ukwest.logic.azure.com:443/workflows/ecb2a02e9bc54468a6273a7bb532afb2/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=PCfkdpMVhxd4VCQnumvVb0JdM0lEsS6raBlwBScoRhY",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"title\": \"PIPELINE RUN FINISHED\",\n    \"message\": \"@{activity('Copy csv to json').output}\",\n    \"color\": \"Green\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send Faild Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Copy csv to json",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.ukwest.logic.azure.com:443/workflows/ecb2a02e9bc54468a6273a7bb532afb2/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=PCfkdpMVhxd4VCQnumvVb0JdM0lEsS6raBlwBScoRhY",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"title\": \"PIPELINE RUN FAILED\",\n    \"message\": \"@{activity('Copy csv to json').error.message}\",\n    \"color\": \"Red\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Blob2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSVBooks')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSONBooks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobToServiceBus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "BooksJsonLookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-01.ukwest.logic.azure.com:443/workflows/3881612def904b72922fd8fb78cf7c9c/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=ydjPm72C54W023XYo-d9MNKVSP-IJHlBSoLWiO5LyMg",
							"method": "POST",
							"headers": {
								"CustomHeader-Version": "1.0",
								"Content-Type": "application/json"
							},
							"body": {
								"value": "@activity('BooksJsonLookup').output.value",
								"type": "Expression"
							},
							"linkedServices": [
								{
									"referenceName": "AzureBlobStorageForADF",
									"type": "LinkedServiceReference"
								}
							],
							"datasets": [
								{
									"referenceName": "DS_JSONBooks",
									"type": "DatasetReference",
									"parameters": {}
								}
							]
						}
					},
					{
						"name": "Copy csv to json_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CSVBooks",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_JSONBooks",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "BooksJsonLookup",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy csv to json_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_JSONBooks",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ServiceBus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSONBooks')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSVBooks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSV2JSONHierarchial')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"source4": {},
									"tracks": {},
									"albums": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Blob2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FSToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ZipFromFS",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BryFSOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "FromFS2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ZipFromFS')]",
				"[concat(variables('factoryId'), '/datasets/DS_BryFSOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FTP2Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Books From FTP 2 Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "FtpReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false,
									"useBinaryTransfer": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_CSVBooksFromSFTP",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_JSONBooks",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "FTP2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSVBooksFromSFTP')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSONBooks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MSSQL2Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move Artist 2 Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerArtist",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSVArtist",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SQL2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerArtist')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSVArtist')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PGSQL2Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy Books to Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "PostgreSqlSource"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"filePattern": "arrayOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "PostgreSqlBooks",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_JSONBooks",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SQL2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PostgreSqlBooks')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSONBooks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SendNotification')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-09.ukwest.logic.azure.com:443/workflows/ecb2a02e9bc54468a6273a7bb532afb2/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=PCfkdpMVhxd4VCQnumvVb0JdM0lEsS6raBlwBScoRhY",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n    \"title\": \"PIPELINE RUN FINISHED\",\n    \"message\": \"DEMO-PIPELINE FINISHED RUNNING SUCCESSFULLY!\",\n    \"color\": \"Green\",\n    \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n    \"pipelineName\": \"@{pipeline().Pipeline}\",\n    \"pipelineRunId\": \"@{pipeline().RunId}\",\n    \"time\": \"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "EmailNotification"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ServiceBUsToBlobListener')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ASBJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASBJsonOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"df": {
						"type": "string"
					}
				},
				"folder": {
					"name": "ServiceBus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASBJson')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASBJsonOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ServiceBusToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetFron Service Bus",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-30.ukwest.logic.azure.com:443/workflows/55501b98fc9c4b2a91cab35cd62f79b9/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=kFs89IBsSrw23qWrqIPlczWNg0cBes_2Sb-iFOL_Gw8",
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "ServiceBus"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sql2Blob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy SQL to Blob Artist",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".csv"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SqlServerTable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.PLtableName",
										"type": "Expression"
									},
									"DSserverName": {
										"value": "@pipeline().parameters.PLserverName",
										"type": "Expression"
									},
									"DSdbName": {
										"value": "@pipeline().parameters.PLdbName",
										"type": "Expression"
									},
									"DSuser": {
										"value": "@pipeline().parameters.PLuser",
										"type": "Expression"
									},
									"DSpassword": {
										"value": "@pipeline().parameters.PLpassword",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSVArtist",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"PLtableName": {
						"type": "string"
					},
					"PLserverName": {
						"type": "string"
					},
					"PLdbName": {
						"type": "string"
					},
					"PLuser": {
						"type": "string"
					},
					"PLpassword": {
						"type": "string"
					}
				},
				"folder": {
					"name": "SQL2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSVArtist')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Storedprocedure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Stored procedure to SQL on Prem",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_PipeLineExecutionDetails]",
							"storedProcedureParameters": {
								"DataFactoryName": {
									"value": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipeLineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipeLineRunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipeLineTriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipeLineTriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQlServeronPremAzure",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "SQL2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQlServeronPremAzure')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UnzipCSVFiles')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings",
									"compressionProperties": {
										"type": "ZipDeflateReadSettings",
										"preserveZipFileNameAsFolder": false
									}
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_ZipCSVInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_UnzippedOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "Blob2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ZipCSVInput')]",
				"[concat(variables('factoryId'), '/datasets/DS_UnzippedOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureFileStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Binary1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Scripts",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "FromFS2Blob"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Binary1')]",
				"[concat(variables('factoryId'), '/datasets/DS_Scripts')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureFileStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureFileStorageLocation"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureFileStorage2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASBJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "test.json",
						"container": "asbinputs"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASBJsonOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"bookId": {
							"type": "string"
						},
						"title": {
							"type": "string"
						},
						"price": {
							"type": "null"
						},
						"catId": {
							"type": "string"
						},
						"authorId": {
							"type": "string"
						},
						"author_id": {
							"type": "integer"
						},
						"cat_id": {
							"type": "integer"
						},
						"description": {
							"type": "null"
						},
						"book_id": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AccessToken')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AccessToken1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestService1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "/authservice/v1/prime/oauth/token?grant_type=password&username=integration&password=SCI1234567!&Client%20ID=client&Client%20Secret=secret"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestService1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AlbumCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Album.csv",
						"container": "unzipped"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "AlbumID",
						"type": "String"
					},
					{
						"name": "AlbumName",
						"type": "String"
					},
					{
						"name": "ReleaseDate",
						"type": "String"
					},
					{
						"name": "Price",
						"type": "String"
					},
					{
						"name": "Artist",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ArtistCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Artist.csv",
						"container": "unzipped"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ArtistID",
						"type": "String"
					},
					{
						"name": "FirstName",
						"type": "String"
					},
					{
						"name": "LastName",
						"type": "String"
					},
					{
						"name": "Town",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BryFSOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "fromFS",
						"container": "unzipped"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSVArtist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Artist.csv",
						"container": "unzipped"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSVBooks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "books.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSVBooksFromSFTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FtpServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FtpServerLocation",
						"fileName": "books.csv",
						"folderPath": "books"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FtpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSONBooks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_MusicJSON')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "music"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"title": {
							"type": "string"
						},
						"price": {
							"type": "number"
						},
						"author_id": {
							"type": "integer"
						},
						"cat_id": {
							"type": "integer"
						},
						"description": {
							"type": "null"
						},
						"book_id": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Scripts')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "aribascripts"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_TrackCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Track.csv",
						"container": "unzipped"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "TrackID",
						"type": "String"
					},
					{
						"name": "TrackName",
						"type": "String"
					},
					{
						"name": "Duration",
						"type": "String"
					},
					{
						"name": "Album",
						"type": "String"
					},
					{
						"name": "TrackURL",
						"type": "String"
					},
					{
						"name": "TrackPath",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_UnzippedOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "unzipped"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ZipCSVInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorageForADF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "music.zip",
						"container": "zipfiles"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ZipFromFS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "FileServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "music.zip"
					},
					"compression": {
						"type": "ZipDeflate"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/FileServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSqlBooks')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "PostgreSqlOnPrem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "books"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/PostgreSqlOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerArtist')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerOnPrem1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ArtistID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FirstName",
						"type": "varchar"
					},
					{
						"name": "LastName",
						"type": "varchar"
					},
					{
						"name": "Town",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Artist"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerOnPrem1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerOnPrem",
					"type": "LinkedServiceReference",
					"parameters": {
						"serverName": {
							"value": "@dataset().DSserverName",
							"type": "Expression"
						},
						"dbName": {
							"value": "@dataset().DSdbName",
							"type": "Expression"
						},
						"user": {
							"value": "@dataset().DSuser",
							"type": "Expression"
						},
						"password": {
							"value": "@dataset().DSpassword",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"tableName": {
						"type": "string"
					},
					"DSserverName": {
						"type": "string"
					},
					"DSdbName": {
						"type": "string"
					},
					"DSuser": {
						"type": "string"
					},
					"DSpassword": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatch1_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch1_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatch1_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorageOnPrem",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch1_accessKey')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageOnPrem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBatch2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBatch",
				"typeProperties": {
					"batchUri": "[parameters('AzureBatch2_properties_typeProperties_batchUri')]",
					"poolName": "[parameters('AzureBatch2_properties_typeProperties_poolName')]",
					"accountName": "[parameters('AzureBatch2_properties_typeProperties_accountName')]",
					"linkedServiceName": {
						"referenceName": "AzureBlobStorageForADF",
						"type": "LinkedServiceReference"
					},
					"accessKey": {
						"type": "SecureString",
						"value": "[parameters('AzureBatch2_accessKey')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorageForADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageForADF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageForADF_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorageOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorageOnPrem_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"host": "[parameters('AzureFileStorage1_properties_typeProperties_host')]",
					"userId": "[parameters('AzureFileStorage1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureFileStorage1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureFileStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureFileStorage",
				"typeProperties": {
					"host": "[parameters('AzureFileStorage2_properties_typeProperties_host')]",
					"userId": "[parameters('AzureFileStorage2_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureFileStorage2_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremLaptop",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremLaptop')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FileServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('FileServer1_properties_typeProperties_host')]",
					"userId": "[parameters('FileServer1_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FileServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FtpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FtpServer",
				"typeProperties": {
					"host": "[parameters('FtpServer1_properties_typeProperties_host')]",
					"port": 21,
					"enableSsl": false,
					"enableServerCertificateValidation": false,
					"authenticationType": "Basic",
					"userName": "[parameters('FtpServer1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('FtpServer1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PostgreSqlOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('PostgreSqlOnPrem_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestService1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestService1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"Client ID": {
							"type": "SecureString",
							"value": "**********"
						},
						"Client Secret": {
							"type": "SecureString",
							"value": "**********"
						},
						"username": {
							"type": "SecureString",
							"value": "**********"
						},
						"password": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQlServeronPremAzure')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SQlServeronPremAzure_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sftp1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Sftp",
				"typeProperties": {
					"host": "[parameters('Sftp1_properties_typeProperties_host')]",
					"port": "21",
					"skipHostKeyValidation": true,
					"authenticationType": "Basic",
					"userName": "[parameters('Sftp1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Sftp1_password')]"
					}
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"serverName": {
						"type": "string"
					},
					"dbName": {
						"type": "string"
					},
					"user": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerOnPrem_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerOnPrem1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServerOnPrem1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "OnPremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/OnPremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/asb-event-trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ServiceBUsToBlobListener",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "CustomEventsTrigger",
				"typeProperties": {
					"subjectEndsWith": "",
					"subjectBeginsWith": "",
					"scope": "[parameters('asb-event-trigger_properties_typeProperties_scope')]",
					"events": [
						"test"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ServiceBUsToBlobListener')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ServiceBUsToBlobListener",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/asbinputs/blobs/",
					"blobPathEndsWith": "json",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ServiceBUsToBlobListener')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ServiceBUsToBlobListener",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "CustomEventsTrigger",
				"typeProperties": {
					"subjectEndsWith": "",
					"subjectBeginsWith": "",
					"scope": "[parameters('trigger2_properties_typeProperties_scope')]",
					"events": [
						"asb-msg"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ServiceBUsToBlobListener')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerSQLtoBlob')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Sql2Blob",
							"type": "PipelineReference"
						},
						"parameters": {
							"PLtableName": "[parameters('triggerSQLtoBlob_properties_Sql2Blob_parameters_PLtableName')]",
							"PLserverName": "[parameters('triggerSQLtoBlob_properties_Sql2Blob_parameters_PLserverName')]",
							"PLdbName": "[parameters('triggerSQLtoBlob_properties_Sql2Blob_parameters_PLdbName')]",
							"PLuser": "[parameters('triggerSQLtoBlob_properties_Sql2Blob_parameters_PLuser')]",
							"PLpassword": "[parameters('triggerSQLtoBlob_properties_Sql2Blob_parameters_PLpassword')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-10-23T16:43:00",
						"timeZone": "GMT Standard Time",
						"schedule": {
							"minutes": [
								19
							],
							"hours": [
								19
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Sql2Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnPremLaptop')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_TrackCSV",
								"type": "DatasetReference"
							},
							"name": "source1"
						},
						{
							"dataset": {
								"referenceName": "DS_AlbumCSV",
								"type": "DatasetReference"
							},
							"name": "source2"
						},
						{
							"dataset": {
								"referenceName": "DS_ArtistCSV",
								"type": "DatasetReference"
							},
							"name": "source4"
						}
					],
					"sinks": [
						{
							"name": "tracks"
						},
						{
							"name": "albums"
						},
						{
							"dataset": {
								"referenceName": "DS_MusicJSON",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Aggregate2"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join3"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "Aggregate3"
						}
					],
					"script": "source(output(\n\t\tTrackID as string,\n\t\tTrackName as string,\n\t\tDuration as string,\n\t\tAlbum as string,\n\t\tTrackURL as string,\n\t\tTrackPath as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource(output(\n\t\tAlbumID as string,\n\t\tAlbumName as string,\n\t\tReleaseDate as string,\n\t\tPrice as string,\n\t\tArtist as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource(output(\n\t\tArtistID as string,\n\t\tFirstName as string,\n\t\tLastName as string,\n\t\tTown as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source4\nDerivedColumn1 aggregate(groupBy(Artist),\n\tAlbums = collect(Albums)) ~> Aggregate1\nJoin1 derive(Albums = @(AlbumName=AlbumName,\n\t\tReleaseDate=ReleaseDate,\n\t\tPrice=Price,\n\t\tTracks=Tracks,\n\t\tAlbumID=AlbumID)) ~> DerivedColumn1\nsource1 derive(Tracks = @(TrackID=TrackID,\n\t\tTrackName=TrackName,\n\t\tDuration=Duration,\n\t\tTrackURL=TrackURL,\n\t\tTrackPath=TrackPath)) ~> DerivedColumn2\nDerivedColumn2 aggregate(groupBy(Album),\n\tTracks = collect(Tracks)) ~> Aggregate2\nsource2, Aggregate2 join(AlbumID == Album,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nsource4, Aggregate1 join(ArtistID == Artist,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join3\nJoin3 derive(Artists = @(ArtistID=ArtistID,\n\t\tFirstName=FirstName,\n\t\tLastName=LastName,\n\t\tTown=Town,\n\t\tAlbums=Albums)) ~> DerivedColumn3\nDerivedColumn3 aggregate(groupBy(ArtistID),\n\tArtists = collect(Artists)) ~> Aggregate3\nAggregate2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1) ~> tracks\nAggregate1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1) ~> albums\nAggregate3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\ttitle as string,\n\t\tprice as double,\n\t\tauthor_id as integer,\n\t\tcat_id as integer,\n\t\tdescription as string,\n\t\tbook_id as integer\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tArtists\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_TrackCSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_AlbumCSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_ArtistCSV')]",
				"[concat(variables('factoryId'), '/datasets/DS_MusicJSON')]"
			]
		}
	]
}